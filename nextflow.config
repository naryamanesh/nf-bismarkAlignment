/*
================================================================================
                  Configuration file for Bismark Alignment Pipeline
--------------------------------------------------------------------------------
Contains the default configuration options for all profiles (environments).
Profile specific parameters are to be saved in the `conf` directory and
imported within the profile here.
================================================================================
*/

// General information about the overall pipeline
manifest {
  author = 'Nader Aryamanesh'
  description = 'Bismark Pipeline'
  homePage = 'https://bitbucket.org/sahmri_bioinformatics/'
  mainScript = 'main.nf'
  name = 'Bismark Pipeline'
  nextflowVersion = '>=0.32.0'
  version = '0.1'
}

// Define profiles and config files to load respectively
profiles {
    local {
        includeConfig 'conf/base.config'
        includeConfig 'conf/local.config'
    }
    slurm {
        includeConfig 'conf/base.config'
        includeConfig 'conf/slurm.config'
    }
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
